[{"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js":"1","/Users/rosegaban/udemy_courses/React/devkeep/src/App.js":"2","/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js":"3","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js":"4","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js":"5","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js":"6","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"7","/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js":"8","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"9","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js":"10","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js":"11","/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js":"12","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js":"13","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js":"14","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js":"15","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js":"16","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js":"17","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js":"18","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js":"19","/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js":"20","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js":"21","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js":"22","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js":"23","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js":"24"},{"size":763,"mtime":1611110847046,"results":"25","hashOfConfig":"26"},{"size":987,"mtime":1611806640822,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610413885728,"results":"28","hashOfConfig":"26"},{"size":1275,"mtime":1611632078237,"results":"29","hashOfConfig":"26"},{"size":1188,"mtime":1611632109164,"results":"30","hashOfConfig":"26"},{"size":2642,"mtime":1611792433139,"results":"31","hashOfConfig":"26"},{"size":421,"mtime":1611123514336,"results":"32","hashOfConfig":"26"},{"size":7608,"mtime":1611807879250,"results":"33","hashOfConfig":"26"},{"size":435,"mtime":1610571302829,"results":"34","hashOfConfig":"26"},{"size":442,"mtime":1610571293261,"results":"35","hashOfConfig":"26"},{"size":329,"mtime":1611624820691,"results":"36","hashOfConfig":"26"},{"size":387,"mtime":1611091306893,"results":"37","hashOfConfig":"26"},{"size":454,"mtime":1611722127161,"results":"38","hashOfConfig":"26"},{"size":649,"mtime":1611090162398,"results":"39","hashOfConfig":"40"},{"size":318,"mtime":1611724676617,"results":"41","hashOfConfig":"26"},{"size":1074,"mtime":1611806738589,"results":"42","hashOfConfig":"26"},{"size":460,"mtime":1611624839605,"results":"43","hashOfConfig":"26"},{"size":4041,"mtime":1611123791961,"results":"44","hashOfConfig":"26"},{"size":2104,"mtime":1611349197535,"results":"45","hashOfConfig":"26"},{"size":2226,"mtime":1611806807460,"results":"46","hashOfConfig":"26"},{"size":2076,"mtime":1611383931449,"results":"47","hashOfConfig":"26"},{"size":214,"mtime":1611286697522,"results":"48","hashOfConfig":"26"},{"size":210,"mtime":1611286694754,"results":"49","hashOfConfig":"26"},{"size":2351,"mtime":1611807592234,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"xfduu0",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ukiy1",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js",[],["102","103"],"/Users/rosegaban/udemy_courses/React/devkeep/src/App.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js",["104","105","106"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/UserContext';\nimport { addNote, deleteNote, updateNote, fetchNotes } from '../../utility/Store';\nimport NotesList from '../../components/NotesList/NotesList';\nimport NoteEditor from '../../components/NoteEditor/NoteEditor';\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport classes from './Notes.module.css';\n\nexport default function Notes() {\n    const { currentUser } = useAuth();\n    const [notes, setNotes] = useState([]);\n    const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    const [noteId, setNoteId] = useState(null);\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteDescription, setNoteDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('javascript');\n    const [theme, setTheme] = useState('github');\n    const [isAddingNote, setIsAddingNote] = useState(false);\n    const [isNoteEdited, setIsNoteEdited] = useState(false);\n    const titleInputEl = useRef();\n\n    useEffect(() => {\n        let isSubscribed = true;\n        if (currentUser) {\n            let fetchedNotes = [];\n            fetchNotes(currentUser.id)\n                .then(response => {\n                    if (isSubscribed) {\n                        fetchedNotes = response.sort((a, b) => b.id - a.id);\n                        setNotes(fetchedNotes);\n                        setNoteId(fetchedNotes[selectedNoteIndex].id);\n                        setNoteTitle(fetchedNotes[selectedNoteIndex].title);\n                        setNoteDescription(fetchedNotes[selectedNoteIndex].description);\n                        setCode(fetchedNotes[selectedNoteIndex].code);\n                        setLanguage(fetchedNotes[selectedNoteIndex].language);\n                    };\n                }\n            );\n        }\n        return () => (isSubscribed = false);\n    }, []);\n\n    useEffect(() => {\n        titleInputEl.current.focus();\n        if (notes && notes.length > 0 && !isNoteEdited) {\n            setNoteId(notes[selectedNoteIndex].id);\n            setNoteTitle(notes[selectedNoteIndex].title);\n            setNoteDescription(notes[selectedNoteIndex].description);\n            setCode(notes[selectedNoteIndex].code);\n            setLanguage(notes[selectedNoteIndex].language);\n        }\n    }, [notes, setNotes, selectedNoteIndex]);\n\n\n    const handleNoteTitleChange = (e) => {\n        setNoteTitle(e.target.value);\n        setIsNoteEdited(true);\n    };\n\n    const handleNoteDescriptionChange = (value, delta, source) => {\n        setNoteDescription(value);\n        if (source === 'user') {\n            setIsNoteEdited(true);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        setIsNoteEdited(true);\n    };\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value);\n        setIsNoteEdited(true);\n\n    };\n\n    const handleThemeChange = (e) => {\n        setTheme(e.target.value);\n    };\n\n    const initializeAddNewNote = () => {\n        setIsAddingNote(true);\n        setIsNoteEdited(false);\n        setNoteId(null);\n        setNoteTitle('');\n        setNoteDescription('');\n        setCode('');\n        setLanguage('javascript');\n        titleInputEl.current.focus();\n    };\n\n    const notifySave = () => {\n        toast.dark(\"Note successfully saved!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDelete = () => {\n        toast.dark(\"Note deleted!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const handleDeleteNote = (noteId) => {\n        setIsAddingNote(false);\n        deleteNote(noteId, currentUser.id)\n            .then(response => {\n                setNotes(notes.filter(note => note.id !== noteId));\n            });\n        notifyDelete();\n    };\n\n    const handleSaveNote = () => {\n        // need to handle how to save untitled notes\n        if (isAddingNote) {\n            setSelectedNoteIndex(0);\n            let title = '';\n            if (noteTitle === '') {\n                title = 'Untitled'\n            } else {\n                title = noteTitle;\n            }\n            addNote(title, noteDescription, code, language, currentUser.id)\n                .then(response => {\n                    setNotes([{\n                        id: response[0].id,\n                        title: response[0].title,\n                        description: response[0].description,\n                        code: response[0].code,\n                        language: response[0].language,\n                        user_id: response[0].user_id\n                    }, ...notes]);\n                });\n            setIsAddingNote(false);\n            setIsNoteEdited(false);\n        } else {\n            updateNote(noteId, noteTitle, noteDescription, code, language)\n                .then(response => {\n                    const newNotes = [...notes];\n                    newNotes[selectedNoteIndex] = {\n                        id: response[0].id,\n                        title: response[0].title,\n                        description: response[0].description,\n                        code: response[0].code,\n                        language: response[0].language,\n                        user_id: response[0].user_id\n                    };\n                    setNotes(newNotes);\n                });\n            setIsNoteEdited(false);\n        }\n        notifySave();\n    };\n\n    const handleNoteClick = (e) => {\n        titleInputEl.current.focus();\n        setIsAddingNote(false);\n        setSelectedNoteIndex(notes.findIndex(note => note.id === parseInt(e.target.dataset.id)));\n    };\n\n    useEffect(() => {\n        const timeOut = setTimeout(() => {\n            if (isNoteEdited) {\n                handleSaveNote();\n            }\n            setIsNoteEdited(false);\n        }, 3000);\n        return () => {\n            clearTimeout(timeOut);\n        }\n    }, [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language]);\n\n\n    return (\n        <div>\n            <div className={classes.Container}>\n                <NotesList\n                    notes={notes}\n                    noteClicked={handleNoteClick}\n                    addNoteClicked={initializeAddNewNote}\n                    noteId={noteId} />\n                <NoteEditor\n                    inputRef={titleInputEl}\n                    noteTitle={noteTitle}\n                    noteDescription={noteDescription}\n                    noteTitleChanged={handleNoteTitleChange}\n                    noteDescriptionChanged={handleNoteDescriptionChange}\n                    deleteClicked={() => handleDeleteNote(noteId)}\n                    saveClicked={() => handleSaveNote()} />\n                <CodeEditor\n                    value={code}\n                    codeChanged={handleCodeChange}\n                    LanguageChanged={handleLanguageChange}\n                    language={language}\n                    ThemeChanged={handleThemeChange}\n                    theme={theme} />\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js",[],["107","108"],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":46,"column":8,"nodeType":"115","endLine":46,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":57,"column":8,"nodeType":"115","endLine":57,"endColumn":44,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"119","line":189,"column":8,"nodeType":"115","endLine":189,"endColumn":80,"suggestions":"120"},{"ruleId":"109","replacedBy":"121"},{"ruleId":"111","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'selectedNoteIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNoteId' needs the current value of 'selectedNoteIndex'.","ArrayExpression",["125"],"React Hook useEffect has a missing dependency: 'isNoteEdited'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'handleSaveNote'. Either include it or remove the dependency array.",["127"],["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [currentUser, selectedNoteIndex]",{"range":"134","text":"135"},"Update the dependencies array to be: [notes, setNotes, selectedNoteIndex, isNoteEdited]",{"range":"136","text":"137"},"Update the dependencies array to be: [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]",{"range":"138","text":"139"},[2057,2059],"[currentUser, selectedNoteIndex]",[2490,2526],"[notes, setNotes, selectedNoteIndex, isNoteEdited]",[6441,6513],"[isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]"]