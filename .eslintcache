[{"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js":"1","/Users/rosegaban/udemy_courses/React/devkeep/src/App.js":"2","/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js":"3","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js":"4","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js":"5","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js":"6","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useStore.js":"7","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"8","/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js":"9","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"10","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js":"11","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js":"12","/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js":"13","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js":"14","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js":"15","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js":"16","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js":"17","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js":"18","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js":"19","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js":"20","/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js":"21","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js":"22"},{"size":763,"mtime":1611110847046,"results":"23","hashOfConfig":"24"},{"size":987,"mtime":1611175714870,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1610413885728,"results":"26","hashOfConfig":"24"},{"size":1113,"mtime":1611173855335,"results":"27","hashOfConfig":"24"},{"size":1278,"mtime":1611123936340,"results":"28","hashOfConfig":"24"},{"size":649,"mtime":1611090162398,"results":"29","hashOfConfig":"24"},{"size":3944,"mtime":1611123393619,"results":"30","hashOfConfig":"24"},{"size":421,"mtime":1611123514336,"results":"31","hashOfConfig":"24"},{"size":4702,"mtime":1611123965572,"results":"32","hashOfConfig":"24"},{"size":435,"mtime":1610571302829,"results":"33","hashOfConfig":"24"},{"size":442,"mtime":1610571293261,"results":"34","hashOfConfig":"24"},{"size":329,"mtime":1610571412801,"results":"35","hashOfConfig":"24"},{"size":387,"mtime":1611091306893,"results":"36","hashOfConfig":"24"},{"size":424,"mtime":1611092567423,"results":"37","hashOfConfig":"24"},{"size":649,"mtime":1611090162398,"results":"38","hashOfConfig":"24"},{"size":327,"mtime":1611092070018,"results":"39","hashOfConfig":"24"},{"size":1074,"mtime":1611175719580,"results":"40","hashOfConfig":"24"},{"size":434,"mtime":1611089032011,"results":"41","hashOfConfig":"24"},{"size":4041,"mtime":1611123791961,"results":"42","hashOfConfig":"24"},{"size":2104,"mtime":1611120040049,"results":"43","hashOfConfig":"24"},{"size":2391,"mtime":1611175127723,"results":"44","hashOfConfig":"24"},{"size":649,"mtime":1611124831558,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"17ukiy1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js",[],["94","95"],"/Users/rosegaban/udemy_courses/React/devkeep/src/App.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useStore.js",["96","97"],"import React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nexport const supabase = createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_KEY\n);\n\nexport const useStore = (props) => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, handleNewNote] = useState();\n    const [noteListener, setNoteListener] = useState(null);\n    // const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    // useEffect(() => {\n    //     fetchNotes()\n    //         .then(response => {\n    //             setNotes(response.sort((a, b) => b.id - a.id));\n    //             // setSelectedNoteIndex(0);\n    //         })\n    //         .catch(console.error)\n    // }, []);\n\n    useEffect(() => {\n        const handleAsync = async () => {\n            if (newNote) {\n                // could be an update??\n                let update = notes.find((note, i) => {\n                    if (note.id === newNote.id) {\n                        notes[i] = newNote\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                if (update) {\n                    setNotes((n) => [...notes]) // update\n                } else {\n                    notes.unshift(newNote)\n                    setNotes((n) => [...notes]) // new\n                }\n            }\n        };\n        handleAsync();\n    }, [newNote]);\n\n    useEffect(() => {\n        if (!noteListener) {\n            setNoteListener(\n                supabase\n                    .from('notes')\n                    .on('INSERT', (payload) => handleNewNote(payload.new))\n                    .on('DELETE', (payload) => handleNewNote(payload.new))\n                    .on('UPDATE', (payload) => handleNewNote(payload.new))\n                    .subscribe()\n            )\n        }\n    }, [noteListener]);\n\n    return { notes, setNotes };\n};\n\nexport const fetchNotes = async () => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select();\n        if (error) {\n            throw new Error(error);\n        }\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const addNote = async (title, description, code) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .insert([{\n                title,\n                description,\n                code\n            }]);\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const deleteNote = async (noteId) => {\n    try {\n        const { data, error } = await supabase\n            .from('notes')\n            .delete()\n            .match({ id: noteId});\n            if (error) {\n                throw new Error(error);\n            }\n            console.log(data);\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const updateNote = async (noteId, title, description, code) => {\n    try {\n        const { data, error } = await supabase\n            .from('notes')\n            .update({\n                title: title,\n                description: description,\n                code: code\n            })\n            .match({ id: noteId });\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const getNote = async (noteId) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select()\n            .eq('id', noteId)\n        if (error) {\n            throw new Error(error);\n        }\n        console.log(data);\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js",["98"],"import React, { useState, useEffect } from 'react';\nimport { addNote, deleteNote, updateNote, useStore, fetchNotes } from '../../utility/useStore';\nimport NotesList from '../../components/NotesList/NotesList';\nimport NoteEditor from '../../components/NoteEditor/NoteEditor';\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\n\nimport classes from './Notes.module.css';\n\nexport default function Notes() {\n    const { notes, setNotes } = useStore();\n    const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    const [noteId, setNoteId] = useState(null);\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteDescription, setNoteDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [isAddingNote, setIsAddingNote] = useState(false);\n    const [isNoteEdited, setIsNoteEdited] = useState(false);\n\n    useEffect(() => {\n        // console.log(`[Notes.js] useEffect selectedNoteIndex ${selectedNoteIndex}`)\n        fetchNotes()\n            .then(response => {\n                if (!isAddingNote || isNoteEdited) {\n                    setNotes(response.sort((a, b) => b.id - a.id));\n                    setNoteId(notes[selectedNoteIndex].id);\n                    setNoteTitle(notes[selectedNoteIndex].title);\n                    setNoteDescription(notes[selectedNoteIndex].description);\n                    setCode(notes[selectedNoteIndex].code);\n                } else {\n                    setSelectedNoteIndex(0);\n                    setNoteId(notes[0].id);\n                }\n            })\n            .catch(console.error)\n            .finally(\n                setIsNoteEdited(false)\n            );\n    }, [isNoteEdited, isAddingNote, selectedNoteIndex]);\n\n    const handleNoteClick = (e) => {\n        if (!isAddingNote) {\n            // setSelectedNoteIndex(notes.findIndex(note => note.id === parseInt(e.target.dataset.id)));\n\n            const noteClickedIndex = notes.findIndex(note => note.id === parseInt(e.target.dataset.id));\n            setNoteId(notes[noteClickedIndex].id);\n            setNoteTitle(notes[noteClickedIndex].title);\n            setNoteDescription(notes[noteClickedIndex].description);\n            setCode(notes[noteClickedIndex].code);\n        }\n    };\n\n    const handleNoteTitleChange = (e) => {\n        // console.log('[Notes.js] handleNoteTitleChange...');\n        setNoteTitle(e.target.value);\n    };\n\n    const handleNoteDescriptionChange = (e) => {\n        setNoteDescription(e);\n    };\n\n    const handleCodeChange = (e) => {\n        setCode(e);\n    };\n\n    const initializeAddNewNote = () => {\n        setIsAddingNote(true);\n        setNoteId(null);\n        setNoteTitle('');\n        setNoteDescription('');\n        setCode('');\n        setSelectedNoteIndex(null);\n    };\n\n    const handleDeleteNote = (noteId) => {\n        setIsAddingNote(false);\n        setIsNoteEdited(true);\n        deleteNote(noteId);\n        setNotes(notes.filter(note => note.id !== noteId));\n    };\n\n    const handleSaveNote = () => {\n        // need to handle how to save untitled notes\n        if (isAddingNote) {\n            addNote(noteTitle, noteDescription, code);\n            setNotes([...notes]);\n            setTimeout(() => null, 1000);\n            alert(`New note created!`);\n        } else {\n            updateNote(noteId, noteTitle, noteDescription, code);\n            setNotes([...notes]);\n            // setSelectedNoteIndex(selectedNoteIndex - 1);\n            alert(`NoteId: ${noteId} saved!`);\n        }\n        setIsAddingNote(false);\n        // console.log(`[Notes.js] isAddingNote ${isAddingNote}`);\n        // console.log(`[Notes.js] selectedNoteIndex ${selectedNoteIndex}`);\n    };\n\n    useEffect(() => {\n        // wait 2000ms to set notes\n        const timeOut = setTimeout(() => null, 5000);\n        return () => clearTimeout(timeOut);\n    }, [noteTitle, noteDescription, code]);\n\n\n    return (\n        <div>\n            <div className={classes.Container}>\n                <NotesList\n                    notes={notes}\n                    noteClicked={handleNoteClick}\n                    addNoteClicked={initializeAddNewNote}\n                    noteId={noteId} />\n                <NoteEditor\n                    noteTitle={noteTitle}\n                    noteDescription={noteDescription}\n                    noteTitleChanged={handleNoteTitleChange}\n                    noteDescriptionChanged={handleNoteDescriptionChange}\n                    deleteClicked={() => handleDeleteNote(noteId)}\n                    saveClicked={() => handleSaveNote()} />\n                <CodeEditor\n                    value={code}\n                    codeChanged={handleCodeChange} />\n            </div>\n        </div>\n    )\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js",["99","100"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../utility/useStore';\nimport { useHistory } from 'react-router-dom';\n\nconst UserContext = createContext();\n\nexport const useAuth = () => {\n    return useContext(UserContext);\n};\n\nexport const UserProvider = (props) => {\n    const history = useHistory();\n    const [session, setSession] = useState();\n    const [currentUser, setCurrentUser] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const signup = async (email, password) => {\n        try {\n            const { user, error } = await supabase.auth.signUp({\n                email: email,\n                password: password\n            });\n            if (error) {\n                throw new Error(error);\n            }\n            setCurrentUser(user);\n            console.log(user);\n            return user;\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n\n    const login = async (email, password) => {\n        try {\n            const { user, error } = await supabase.auth.signIn({\n                email: email,\n                password: password\n            });\n            if (error) {\n                throw new Error(error);\n            }\n            setCurrentUser(user);\n            return user;\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n\n    const logout = async () => {\n        try {\n            const { error } = await supabase.auth.signOut();\n            if (error) {\n                throw new Error(error);\n            }\n            setSession(null);\n            setCurrentUser(null);\n        } catch (error) {\n            console.log('error', error);\n        } finally {\n            // setSession(null);\n            // setCurrentUser(null);\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = supabase.auth.onAuthStateChange((event, session) => {\n            if (session) {\n                setCurrentUser(session.user);\n            }\n            setIsLoading(false);\n            console.log(event, session);\n        });\n        return unsubscribe;\n    }, []);\n\n    const value = {\n        session,\n        currentUser,\n        signup,\n        login,\n        logout\n    };\n\n    return (\n        <UserContext.Provider value={value}>\n            {props.children}\n        </UserContext.Provider>\n    );\n};\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":44,"column":8,"nodeType":"111","endLine":44,"endColumn":17,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":38,"column":8,"nodeType":"111","endLine":38,"endColumn":55,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":12,"column":11,"nodeType":"107","messageId":"108","endLine":12,"endColumn":18},{"ruleId":"105","severity":1,"message":"116","line":15,"column":12,"nodeType":"107","messageId":"108","endLine":15,"endColumn":21},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array. You can also do a functional update 'setNotes(n => ...)' if you only need 'notes' in the 'setNotes' call.","ArrayExpression",["119"],"React Hook useEffect has missing dependencies: 'notes' and 'setNotes'. Either include them or remove the dependency array.",["120"],"'history' is assigned a value but never used.","'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [newNote, notes]",{"range":"125","text":"126"},"Update the dependencies array to be: [isNoteEdited, isAddingNote, selectedNoteIndex, setNotes, notes]",{"range":"127","text":"128"},[1466,1475],"[newNote, notes]",[1668,1715],"[isNoteEdited, isAddingNote, selectedNoteIndex, setNotes, notes]"]