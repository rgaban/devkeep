[{"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js":"1","/Users/rosegaban/udemy_courses/React/devkeep/src/App.js":"2","/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js":"3","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js":"4","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js":"5","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js":"6","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useStore.js":"7","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"8","/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js":"9","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"10","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js":"11","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js":"12"},{"size":500,"mtime":1610413885727,"results":"13","hashOfConfig":"14"},{"size":227,"mtime":1610506666827,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610413885728,"results":"16","hashOfConfig":"14"},{"size":1113,"mtime":1610591759421,"results":"17","hashOfConfig":"14"},{"size":1144,"mtime":1610592092266,"results":"18","hashOfConfig":"14"},{"size":715,"mtime":1610519271753,"results":"19","hashOfConfig":"14"},{"size":3225,"mtime":1610591212609,"results":"20","hashOfConfig":"14"},{"size":391,"mtime":1610589202046,"results":"21","hashOfConfig":"14"},{"size":2896,"mtime":1610591788829,"results":"22","hashOfConfig":"14"},{"size":435,"mtime":1610571302829,"results":"23","hashOfConfig":"14"},{"size":442,"mtime":1610571293261,"results":"24","hashOfConfig":"14"},{"size":329,"mtime":1610571412801,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17ukiy1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js",[],["53","54"],"/Users/rosegaban/udemy_courses/React/devkeep/src/App.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js",["55"],"import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport classes from './CodeEditor.module.css';\n\nconst CodeEditor = (props) => {\n    const edit = () => {\n        console.log(\"Editing...\");\n    }\n    return (\n        <div className={classes.Container}>\n            <AceEditor\n                mode=\"javascript\"\n                theme=\"monokai\"\n                value={props.value}\n                onChange={props.codeChanged}\n                name=\"ID of Div\"\n                editorProps={{ $blockScrolling: true }}\n                height=\"100vh\" />\n        </div>\n\n    )\n};\n\nexport default CodeEditor;\n","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useStore.js",["56","57"],"import React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_KEY\n);\n\nexport const useStore = (props) => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, handleNewNote] = useState();\n    const [noteListener, setNoteListener] = useState(null);\n\n    useEffect(() => {\n        fetchNotes()\n            .then(response => {\n                setNotes(response.sort((a, b) => b.id - a.id));\n            })\n            .catch(console.error);\n    }, []);\n\n    useEffect(() => {\n        const handleAsync = async () => {\n            if (newNote) {\n                // could be an update??\n                let update = notes.find((note, i) => {\n                    if (note.id === newNote.id) {\n                        notes[i] = newNote\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                if (update) {\n                    setNotes((n) => [...notes]) // update\n                } else {\n                    notes.unshift(newNote)\n                    setNotes((n) => [...notes]) // new\n                }\n            }\n        };\n        handleAsync();\n    }, [newNote]);\n\n    useEffect(() => {\n        if (!noteListener) {\n            setNoteListener(\n                supabase\n                    .from('notes')\n                    .on('INSERT', (payload) => handleNewNote(payload.new))\n                    .on('UPDATE', (payload) => handleNewNote(payload.new))\n                    .subscribe()\n            )\n        }\n    }, [noteListener]);\n\n    return { notes, setNotes };\n};\n\nexport const fetchNotes = async () => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select();\n        if (error) {\n            throw new Error(error);\n        }\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const addNote = async (title, description, code) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .insert([{\n                title,\n                description,\n                code\n            }]);\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const deleteNote = async (noteId) => {\n    try {\n        const { data, error } = await supabase\n            .from('notes')\n            .delete()\n            .match({ id: noteId});\n            if (error) {\n                throw new Error(error);\n            }\n            console.log(data);\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const getNote = async (noteId) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select()\n            .eq('id', noteId)\n        if (error) {\n            throw new Error(error);\n        }\n        console.log(data);\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":11,"nodeType":"64","messageId":"65","endLine":10,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":43,"column":8,"nodeType":"69","endLine":43,"endColumn":17,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'edit' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array. You can also do a functional update 'setNotes(n => ...)' if you only need 'notes' in the 'setNotes' call.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [newNote, notes]",{"range":"76","text":"77"},[1323,1332],"[newNote, notes]"]