[{"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js":"1","/Users/rosegaban/udemy_courses/React/devkeep/src/App.js":"2","/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js":"3","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js":"4","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js":"5","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js":"6","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"7","/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js":"8","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"9","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js":"10","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js":"11","/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js":"12","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js":"13","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js":"14","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js":"15","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js":"16","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js":"17","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js":"18","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js":"19","/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js":"20","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js":"21","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js":"22","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js":"23","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useDebounce.js":"24","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/usePrevious.js":"25","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js":"26"},{"size":763,"mtime":1611110847046,"results":"27","hashOfConfig":"28"},{"size":987,"mtime":1611792368752,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610413885728,"results":"30","hashOfConfig":"28"},{"size":1275,"mtime":1611632078237,"results":"31","hashOfConfig":"28"},{"size":1188,"mtime":1611632109164,"results":"32","hashOfConfig":"28"},{"size":2642,"mtime":1611792433139,"results":"33","hashOfConfig":"28"},{"size":421,"mtime":1611123514336,"results":"34","hashOfConfig":"28"},{"size":7489,"mtime":1611801306100,"results":"35","hashOfConfig":"28"},{"size":435,"mtime":1610571302829,"results":"36","hashOfConfig":"28"},{"size":442,"mtime":1610571293261,"results":"37","hashOfConfig":"28"},{"size":329,"mtime":1611624820691,"results":"38","hashOfConfig":"28"},{"size":387,"mtime":1611091306893,"results":"39","hashOfConfig":"28"},{"size":454,"mtime":1611722127161,"results":"40","hashOfConfig":"28"},{"size":649,"mtime":1611090162398,"results":"41","hashOfConfig":"42"},{"size":318,"mtime":1611724676617,"results":"43","hashOfConfig":"28"},{"size":1074,"mtime":1611722823847,"results":"44","hashOfConfig":"28"},{"size":460,"mtime":1611624839605,"results":"45","hashOfConfig":"28"},{"size":4041,"mtime":1611123791961,"results":"46","hashOfConfig":"28"},{"size":2104,"mtime":1611349197535,"results":"47","hashOfConfig":"28"},{"size":2052,"mtime":1611801456033,"results":"48","hashOfConfig":"28"},{"size":2076,"mtime":1611383931449,"results":"49","hashOfConfig":"28"},{"size":214,"mtime":1611286697522,"results":"50","hashOfConfig":"28"},{"size":210,"mtime":1611286694754,"results":"51","hashOfConfig":"28"},{"size":381,"mtime":1611793512913,"results":"52","hashOfConfig":"28"},{"size":207,"mtime":1611617379502,"results":"53","hashOfConfig":"42"},{"size":2351,"mtime":1611801361318,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"xfduu0",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ukiy1",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js",[],["111","112"],"/Users/rosegaban/udemy_courses/React/devkeep/src/App.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js",["113","114","115"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/UserContext';\nimport { addNote, deleteNote, updateNote, fetchNotes } from '../../utility/Store';\nimport NotesList from '../../components/NotesList/NotesList';\nimport NoteEditor from '../../components/NoteEditor/NoteEditor';\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport classes from './Notes.module.css';\n\nexport default function Notes() {\n    const { currentUser } = useAuth();\n    const [notes, setNotes] = useState([]);\n    const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    const [noteId, setNoteId] = useState(null);\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteDescription, setNoteDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('javascript');\n    const [theme, setTheme] = useState('github');\n    const [isAddingNote, setIsAddingNote] = useState(false);\n    const [isNoteEdited, setIsNoteEdited] = useState(false);\n    const titleInputEl = useRef();\n\n    useEffect(() => {\n        console.log('[App.js] useEffect fetchNotes');\n        if (currentUser) {\n            let fetchedNotes = [];\n            fetchNotes(currentUser.id)\n                .then(response => {\n                    fetchedNotes = response.sort((a, b) => b.id - a.id);\n                    setNotes(fetchedNotes);\n                    setNoteId(fetchedNotes[selectedNoteIndex].id);\n                    setNoteTitle(fetchedNotes[selectedNoteIndex].title);\n                    setNoteDescription(fetchedNotes[selectedNoteIndex].description);\n                    setCode(fetchedNotes[selectedNoteIndex].code);\n                    setLanguage(fetchedNotes[selectedNoteIndex].language);\n                }\n            );\n        }\n    }, []);\n\n    useEffect(() => {\n        titleInputEl.current.focus();\n        if (notes && notes.length > 0 && !isNoteEdited) {\n            setNoteId(notes[selectedNoteIndex].id);\n            setNoteTitle(notes[selectedNoteIndex].title);\n            setNoteDescription(notes[selectedNoteIndex].description);\n            setCode(notes[selectedNoteIndex].code);\n            setLanguage(notes[selectedNoteIndex].language);\n        }\n    }, [notes, setNotes, selectedNoteIndex]);\n\n\n    const handleNoteTitleChange = (e) => {\n        setNoteTitle(e.target.value);\n        setIsNoteEdited(true);\n    };\n\n    const handleNoteDescriptionChange = (value, delta, source) => {\n        setNoteDescription(value);\n        if (source === 'user') {\n            setIsNoteEdited(true);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        setIsNoteEdited(true);\n    };\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value);\n        setIsNoteEdited(true);\n\n    };\n\n    const handleThemeChange = (e) => {\n        setTheme(e.target.value);\n    };\n\n    const initializeAddNewNote = () => {\n        setIsAddingNote(true);\n        setIsNoteEdited(false);\n        setNoteId(null);\n        setNoteTitle('');\n        setNoteDescription('');\n        setCode('');\n        setLanguage('javascript');\n        titleInputEl.current.focus();\n    };\n\n    const notifySave = () => {\n        toast.dark(\"Note successfully saved!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDelete = () => {\n        toast.dark(\"Note deleted!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const handleDeleteNote = (noteId) => {\n        setIsAddingNote(false);\n        deleteNote(noteId, currentUser.id)\n            .then(response => {\n                setNotes(notes.filter(note => note.id !== noteId));\n            });\n        notifyDelete();\n    };\n\n    const handleSaveNote = () => {\n        // need to handle how to save untitled notes\n        console.log('save');\n        console.log('isNoteEdited', isNoteEdited);\n        if (isAddingNote) {\n            setSelectedNoteIndex(0);\n            let title = '';\n            if (noteTitle === '') {\n                title = 'Untitled'\n            } else {\n                title = noteTitle;\n            }\n            addNote(title, noteDescription, code, language, currentUser.id)\n                .then(response => {\n                    setNotes([{\n                        id: response[0].id,\n                        title: response[0].title,\n                        description: response[0].description,\n                        code: response[0].code,\n                        language: response[0].language,\n                        user_id: response[0].user_id\n                    }, ...notes]);\n                });\n            setIsAddingNote(false);\n            setIsNoteEdited(false);\n        } else {\n            updateNote(noteId, noteTitle, noteDescription, code, language)\n                .then(response => {\n                    notes.splice(selectedNoteIndex, 1, {\n                        id: response[0].id,\n                        title: response[0].title,\n                        description: response[0].description,\n                        code: response[0].code,\n                        language: response[0].language,\n                        user_id: response[0].user_id\n                    })\n                });\n            setIsNoteEdited(false);\n        }\n        notifySave();\n    };\n\n    const handleNoteClick = (e) => {\n        titleInputEl.current.focus();\n        setIsAddingNote(false);\n        setSelectedNoteIndex(notes.findIndex(note => note.id === parseInt(e.target.dataset.id)));\n    };\n\n    useEffect(() => {\n        const timeOut = setTimeout(() => {\n            if (isNoteEdited) {\n                handleSaveNote();\n            }\n            setIsNoteEdited(false);\n        }, 3000);\n        return () => {\n            clearTimeout(timeOut);\n        }\n    }, [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language]);\n\n\n    return (\n        <div>\n            <div className={classes.Container}>\n                <NotesList\n                    notes={notes}\n                    noteClicked={handleNoteClick}\n                    addNoteClicked={initializeAddNewNote}\n                    noteId={noteId} />\n                <NoteEditor\n                    inputRef={titleInputEl}\n                    noteTitle={noteTitle}\n                    noteDescription={noteDescription}\n                    noteTitleChanged={handleNoteTitleChange}\n                    noteDescriptionChanged={handleNoteDescriptionChange}\n                    deleteClicked={() => handleDeleteNote(noteId)}\n                    saveClicked={() => handleSaveNote()} />\n                <CodeEditor\n                    value={code}\n                    codeChanged={handleCodeChange}\n                    LanguageChanged={handleLanguageChange}\n                    language={language}\n                    ThemeChanged={handleThemeChange}\n                    theme={theme} />\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js",["116"],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/useDebounce.js",["117"],"import React, { useState, useEffect } from 'react';\n\nexport const useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => clearTimeout(handler);\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n",["118","119"],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/usePrevious.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":43,"column":8,"nodeType":"126","endLine":43,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":54,"column":8,"nodeType":"126","endLine":54,"endColumn":44,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":186,"column":8,"nodeType":"126","endLine":186,"endColumn":80,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":12,"nodeType":"134","messageId":"135","endLine":12,"endColumn":21},{"ruleId":"132","severity":1,"message":"136","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"120","replacedBy":"137"},{"ruleId":"122","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'selectedNoteIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNoteId' needs the current value of 'selectedNoteIndex'.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'isNoteEdited'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'handleSaveNote'. Either include it or remove the dependency array.",["143"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [currentUser, selectedNoteIndex]",{"range":"150","text":"151"},"Update the dependencies array to be: [notes, setNotes, selectedNoteIndex, isNoteEdited]",{"range":"152","text":"153"},"Update the dependencies array to be: [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]",{"range":"154","text":"155"},[1942,1944],"[currentUser, selectedNoteIndex]",[2375,2411],"[notes, setNotes, selectedNoteIndex, isNoteEdited]",[6322,6394],"[isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]"]