[{"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js":"1","/Users/rosegaban/udemy_courses/React/devkeep/src/App.js":"2","/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js":"3","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js":"4","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js":"5","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js":"6","/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"7","/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js":"8","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"9","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js":"10","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js":"11","/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js":"12","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js":"13","/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js":"14","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js":"15","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js":"16","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js":"17","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js":"18","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js":"19","/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js":"20","/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js":"21","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js":"22","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js":"23","/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js":"24"},{"size":771,"mtime":1611822068430,"results":"25","hashOfConfig":"26"},{"size":2538,"mtime":1612216269390,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610413885728,"results":"28","hashOfConfig":"26"},{"size":1275,"mtime":1611632078237,"results":"29","hashOfConfig":"26"},{"size":1188,"mtime":1611632109164,"results":"30","hashOfConfig":"26"},{"size":2666,"mtime":1611819585324,"results":"31","hashOfConfig":"26"},{"size":871,"mtime":1612230584653,"results":"32","hashOfConfig":"26"},{"size":9016,"mtime":1612216815253,"results":"33","hashOfConfig":"26"},{"size":453,"mtime":1611962429681,"results":"34","hashOfConfig":"26"},{"size":458,"mtime":1611962356600,"results":"35","hashOfConfig":"26"},{"size":344,"mtime":1611904844882,"results":"36","hashOfConfig":"26"},{"size":387,"mtime":1611091306893,"results":"37","hashOfConfig":"26"},{"size":454,"mtime":1611722127161,"results":"38","hashOfConfig":"26"},{"size":649,"mtime":1611090162398,"results":"39","hashOfConfig":"40"},{"size":318,"mtime":1611724676617,"results":"41","hashOfConfig":"26"},{"size":1170,"mtime":1612216452307,"results":"42","hashOfConfig":"26"},{"size":460,"mtime":1611624839605,"results":"43","hashOfConfig":"26"},{"size":3193,"mtime":1611964764197,"results":"44","hashOfConfig":"26"},{"size":1530,"mtime":1611964921732,"results":"45","hashOfConfig":"26"},{"size":2233,"mtime":1611898240454,"results":"46","hashOfConfig":"26"},{"size":2076,"mtime":1612235645155,"results":"47","hashOfConfig":"26"},{"size":214,"mtime":1611286697522,"results":"48","hashOfConfig":"26"},{"size":210,"mtime":1611286694754,"results":"49","hashOfConfig":"26"},{"size":2351,"mtime":1612251092707,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"f6u9pr",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ukiy1",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/rosegaban/udemy_courses/React/devkeep/src/index.js",["102"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { AuthProvider } from './context/AuthContext';\nimport { UserProvider } from './context/UserContext';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <UserProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </UserProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["103","104"],"/Users/rosegaban/udemy_courses/React/devkeep/src/App.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/CodeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/container/Notes/Notes.js",["105","106","107"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/UserContext';\nimport { addNote, deleteNote, updateNote, fetchNotes } from '../../utility/Store';\nimport NotesList from '../../components/NotesList/NotesList';\nimport NoteEditor from '../../components/NoteEditor/NoteEditor';\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport classes from './Notes.module.css';\n\nexport default function Notes() {\n    const { currentUser } = useAuth() || {};\n    const [notes, setNotes] = useState([]);\n    const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    const [noteId, setNoteId] = useState(null);\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteDescription, setNoteDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('javascript');\n    const [theme, setTheme] = useState('github');\n    const [isAddingNote, setIsAddingNote] = useState(false);\n    const [isNoteEdited, setIsNoteEdited] = useState(false);\n    // const [isNoteRequestPending, setIsNoteRequestPending] = useState(false);\n    const titleInputEl = useRef();\n\n    useEffect(() => {\n        let isSubscribed = true;\n        if (currentUser) {\n            let fetchedNotes = [];\n            fetchNotes(currentUser.id)\n                .then(response => {\n                    if (isSubscribed && response.length > 0) {\n                        console.log(response);\n                        fetchedNotes = response.sort((a, b) => b.id - a.id);\n                        setNotes(fetchedNotes);\n                        setNoteId(fetchedNotes[selectedNoteIndex].id);\n                        setNoteTitle(fetchedNotes[selectedNoteIndex].title);\n                        setNoteDescription(fetchedNotes[selectedNoteIndex].description);\n                        setCode(fetchedNotes[selectedNoteIndex].code);\n                        setLanguage(fetchedNotes[selectedNoteIndex].language);\n                    };\n                }\n            );\n        }\n        return () => (isSubscribed = false);\n    }, []);\n\n    useEffect(() => {\n        titleInputEl.current.focus();\n        if (notes && notes.length > 0 && !isNoteEdited) {\n            setNoteId(notes[selectedNoteIndex].id);\n            setNoteTitle(notes[selectedNoteIndex].title);\n            setNoteDescription(notes[selectedNoteIndex].description);\n            setCode(notes[selectedNoteIndex].code);\n            setLanguage(notes[selectedNoteIndex].language);\n        }\n    }, [notes, setNotes, selectedNoteIndex]);\n\n\n    const handleNoteTitleChange = (e) => {\n        setNoteTitle(e.target.value);\n        setIsNoteEdited(true);\n    };\n\n    const handleNoteDescriptionChange = (value, delta, source) => {\n        setNoteDescription(value);\n        if (source === 'user') {\n            setIsNoteEdited(true);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        setIsNoteEdited(true);\n    };\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value);\n        setIsNoteEdited(true);\n\n    };\n\n    const handleThemeChange = (e) => {\n        setTheme(e.target.value);\n    };\n\n    const initializeAddNewNote = () => {\n        setIsAddingNote(true);\n        setIsNoteEdited(false);\n        setNoteId(null);\n        setNoteTitle('');\n        setNoteDescription('');\n        setCode('');\n        setLanguage('javascript');\n        titleInputEl.current.focus();\n    };\n\n    const notifySave = () => {\n        toast.dark(\"Note successfully saved!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDelete = () => {\n        toast.dark(\"Note deleted!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifySaveError = () => {\n        toast.error(\"There was an issue saving your note, please try again!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDeleteError = () => {\n        toast.error(\"There was an issue deleting your note, please try again!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    }\n\n    const handleDeleteNote = (noteId) => {\n        setIsAddingNote(false);\n        deleteNote(noteId, currentUser.id)\n            .then(response => {\n                if (response) {\n                    notifyDelete();\n                    setNotes(notes.filter(note => note.id !== noteId));\n                } else {\n                    notifyDeleteError();\n                };\n            });\n    };\n\n    const handleSaveNote = () => {\n        // need to handle how to save untitled notes\n        if (isAddingNote) {\n            setSelectedNoteIndex(0);\n            let title = '';\n            if (noteTitle === '') {\n                title = 'Untitled'\n            } else {\n                title = noteTitle;\n            }\n\n            addNote(title, noteDescription, code, language, currentUser.id)\n                .then(response => {\n                    if (response) {\n                        notifySave();\n                        setNotes([{\n                            id: response[0].id,\n                            title: response[0].title,\n                            description: response[0].description,\n                            code: response[0].code,\n                            language: response[0].language,\n                            user_id: response[0].user_id\n                        }, ...notes]);\n                    } else {\n                        notifySaveError();\n                    }\n                });\n            setIsAddingNote(false);\n            setIsNoteEdited(false);\n        } else {\n            updateNote(noteId, noteTitle, noteDescription, code, language)\n                .then(response => {\n                    if (response) {\n                        notifySave();\n                        const newNotes = [...notes];\n                        newNotes[selectedNoteIndex] = {\n                            id: response[0].id,\n                            title: response[0].title,\n                            description: response[0].description,\n                            code: response[0].code,\n                            language: response[0].language,\n                            user_id: response[0].user_id\n                        };\n                        setNotes(newNotes);\n                    } else {\n                        notifySaveError();\n                    };\n                });\n            setIsNoteEdited(false);\n        };\n    };\n\n    const handleNoteClick = (e) => {\n        titleInputEl.current.focus();\n        setIsAddingNote(false);\n        setSelectedNoteIndex(notes.findIndex(note => note.id === parseInt(e.target.dataset.id)));\n    };\n\n    useEffect(() => {\n        const timeOut = setTimeout(() => {\n            if (isNoteEdited) {\n                handleSaveNote()\n            }\n            setIsNoteEdited(false);\n        }, 3000);\n        return () => {\n            clearTimeout(timeOut);\n        }\n    }, [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language]);\n\n\n    return (\n        <div>\n            <div className={classes.Container}>\n                <NotesList\n                    notes={notes}\n                    noteClicked={handleNoteClick}\n                    addNoteClicked={initializeAddNewNote}\n                    noteId={noteId} />\n                <NoteEditor\n                    inputRef={titleInputEl}\n                    noteTitle={noteTitle}\n                    noteDescription={noteDescription}\n                    noteTitleChanged={handleNoteTitleChange}\n                    noteDescriptionChanged={handleNoteDescriptionChange}\n                    deleteClicked={() => handleDeleteNote(noteId)}\n                    saveClicked={() => handleSaveNote()} />\n                <CodeEditor\n                    value={code}\n                    codeChanged={handleCodeChange}\n                    LanguageChanged={handleLanguageChange}\n                    language={language}\n                    ThemeChanged={handleThemeChange}\n                    theme={theme} />\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/AddButton/AddButton.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/hoc/Layout.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/CodeEditor/codeEditor.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Logo/Logo.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/Navigation.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Signup.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Auth/Login.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/context/UserContext.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/Profile/Profile.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js",[],"/Users/rosegaban/udemy_courses/React/devkeep/src/utility/Store.js",[],{"ruleId":"108","severity":1,"message":"109","line":5,"column":25,"nodeType":"110","messageId":"111","endLine":5,"endColumn":31},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":48,"column":8,"nodeType":"118","endLine":48,"endColumn":10,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":59,"column":8,"nodeType":"118","endLine":59,"endColumn":44,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":229,"column":8,"nodeType":"118","endLine":229,"endColumn":80,"suggestions":"123"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'selectedNoteIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNoteId' needs the current value of 'selectedNoteIndex'.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'isNoteEdited'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'handleSaveNote'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [currentUser, selectedNoteIndex]",{"range":"135","text":"136"},"Update the dependencies array to be: [notes, setNotes, selectedNoteIndex, isNoteEdited]",{"range":"137","text":"138"},"Update the dependencies array to be: [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]",{"range":"139","text":"140"},[2213,2215],"[currentUser, selectedNoteIndex]",[2646,2682],"[notes, setNotes, selectedNoteIndex, isNoteEdited]",[7849,7921],"[isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]"]