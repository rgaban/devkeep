[{"/Users/rosegaban/dev/devkeep/src/index.js":"1","/Users/rosegaban/dev/devkeep/src/reportWebVitals.js":"2","/Users/rosegaban/dev/devkeep/src/App.js":"3","/Users/rosegaban/dev/devkeep/src/context/UserContext.js":"4","/Users/rosegaban/dev/devkeep/src/hoc/Layout.js":"5","/Users/rosegaban/dev/devkeep/src/utility/Store.js":"6","/Users/rosegaban/dev/devkeep/src/components/Auth/Login.js":"7","/Users/rosegaban/dev/devkeep/src/container/Notes/Notes.js":"8","/Users/rosegaban/dev/devkeep/src/components/Auth/Signup.js":"9","/Users/rosegaban/dev/devkeep/src/components/Profile/Profile.js":"10","/Users/rosegaban/dev/devkeep/src/components/NoteEditor/NoteEditor.js":"11","/Users/rosegaban/dev/devkeep/src/components/NotesList/NotesList.js":"12","/Users/rosegaban/dev/devkeep/src/components/CodeEditor/CodeEditor.js":"13","/Users/rosegaban/dev/devkeep/src/components/Navigation/Toolbar/Toolbar.js":"14","/Users/rosegaban/dev/devkeep/src/components/Navigation/Navigation.js":"15","/Users/rosegaban/dev/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js":"16","/Users/rosegaban/dev/devkeep/src/components/UI/AddButton/AddButton.js":"17","/Users/rosegaban/dev/devkeep/src/components/Logo/Logo.js":"18","/Users/rosegaban/dev/devkeep/src/components/UI/DeleteButton/DeleteButton.js":"19","/Users/rosegaban/dev/devkeep/src/components/UI/SaveButton/SaveButton.js":"20","/Users/rosegaban/dev/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js":"21","/Users/rosegaban/dev/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js":"22","/Users/rosegaban/dev/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js":"23"},{"size":710,"mtime":1676850395023,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1676850395023,"results":"26","hashOfConfig":"25"},{"size":2442,"mtime":1676850395010,"results":"27","hashOfConfig":"25"},{"size":2233,"mtime":1676850395022,"results":"28","hashOfConfig":"25"},{"size":387,"mtime":1676850395023,"results":"29","hashOfConfig":"25"},{"size":2389,"mtime":1676919417274,"results":"30","hashOfConfig":"25"},{"size":1530,"mtime":1676850395014,"results":"31","hashOfConfig":"25"},{"size":8408,"mtime":1676852606854,"results":"32","hashOfConfig":"25"},{"size":3193,"mtime":1676850395015,"results":"33","hashOfConfig":"25"},{"size":2076,"mtime":1676850395019,"results":"34","hashOfConfig":"25"},{"size":1302,"mtime":1676850395018,"results":"35","hashOfConfig":"25"},{"size":1188,"mtime":1676850395019,"results":"36","hashOfConfig":"25"},{"size":2748,"mtime":1676850395016,"results":"37","hashOfConfig":"25"},{"size":454,"mtime":1676850395017,"results":"38","hashOfConfig":"25"},{"size":1160,"mtime":1676850395016,"results":"39","hashOfConfig":"25"},{"size":951,"mtime":1676850395018,"results":"40","hashOfConfig":"25"},{"size":344,"mtime":1676850395020,"results":"41","hashOfConfig":"25"},{"size":318,"mtime":1676850395016,"results":"42","hashOfConfig":"25"},{"size":453,"mtime":1676850395020,"results":"43","hashOfConfig":"25"},{"size":458,"mtime":1676850395021,"results":"44","hashOfConfig":"25"},{"size":214,"mtime":1676850395021,"results":"45","hashOfConfig":"25"},{"size":210,"mtime":1676850395021,"results":"46","hashOfConfig":"25"},{"size":460,"mtime":1676850395017,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1yxoqmx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rosegaban/dev/devkeep/src/index.js",[],["97","98"],"/Users/rosegaban/dev/devkeep/src/reportWebVitals.js",[],"/Users/rosegaban/dev/devkeep/src/App.js",[],"/Users/rosegaban/dev/devkeep/src/context/UserContext.js",[],"/Users/rosegaban/dev/devkeep/src/hoc/Layout.js",[],"/Users/rosegaban/dev/devkeep/src/utility/Store.js",["99"],"import { ChromeReaderMode } from '@material-ui/icons';\nimport { createClient } from '@supabase/supabase-js';\n\nexport const supabase = createClient(\n    process.env.REACT_APP_SUPABASE_URL,\n    process.env.REACT_APP_SUPABASE_KEY\n);\n\nexport const fetchNotes = async (user_id) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select()\n            .eq('user_id', user_id);\n        if (error) {\n            throw new Error(error);\n        }\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    };\n};\n\nexport const addNote = async (title, description, code, language, user_id) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .insert([{\n                title,\n                description,\n                code,\n                user_id,\n                language\n            }]);\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    };\n};\n\nexport const deleteNote = async (noteId, user_id) => {\n    try {\n        const { data, error } = await supabase\n            .from('notes')\n            .delete()\n            .match({\n                id: noteId,\n                user_id: user_id\n            });\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const updateNote = async (noteId, title, description, code, language) => {\n    try {\n        const { data, error } = await supabase\n            .from('notes')\n            .update({\n                title: title,\n                description: description,\n                code: code,\n                language: language\n            })\n            .match({ id: noteId });\n            if (error) {\n                throw new Error(error);\n            }\n            return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n\nexport const getNote = async (noteId) => {\n    try {\n        let { data, error } = await supabase\n            .from('notes')\n            .select()\n            .eq('id', noteId)\n        if (error) {\n            throw new Error(error);\n        }\n        return data;\n    } catch (error) {\n        console.log('error', error);\n    }\n};\n","/Users/rosegaban/dev/devkeep/src/components/Auth/Login.js",[],"/Users/rosegaban/dev/devkeep/src/container/Notes/Notes.js",["100","101","102"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/UserContext';\nimport { addNote, deleteNote, updateNote, fetchNotes } from '../../utility/Store';\nimport NotesList from '../../components/NotesList/NotesList';\nimport NoteEditor from '../../components/NoteEditor/NoteEditor';\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport classes from './Notes.module.css';\n\nexport default function Notes() {\n    const { currentUser } = useAuth() || {};\n    const [notes, setNotes] = useState([]);\n    const [selectedNoteIndex, setSelectedNoteIndex] = useState(0);\n    const [noteId, setNoteId] = useState(null);\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteDescription, setNoteDescription] = useState('');\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('javascript');\n    const [theme, setTheme] = useState('github');\n    const [isAddingNote, setIsAddingNote] = useState(false);\n    const [isNoteEdited, setIsNoteEdited] = useState(false);\n    const titleInputEl = useRef();\n\n    useEffect(() => {\n        let isSubscribed = true;\n        if (currentUser) {\n            let fetchedNotes = [];\n            fetchNotes(currentUser.id)\n                .then(response => {\n                    if (isSubscribed && response.length > 0) {\n                        fetchedNotes = response.sort((a, b) => b.id - a.id);\n                        setNotes(fetchedNotes);\n                        setNoteId(fetchedNotes[selectedNoteIndex].id);\n                        setNoteTitle(fetchedNotes[selectedNoteIndex].title);\n                        setNoteDescription(fetchedNotes[selectedNoteIndex].description);\n                        setCode(fetchedNotes[selectedNoteIndex].code);\n                        setLanguage(fetchedNotes[selectedNoteIndex].language);\n                    };\n                }\n            );\n        }\n        return () => (isSubscribed = false);\n    }, []);\n\n    useEffect(() => {\n        titleInputEl.current.focus();\n        if (notes && notes.length > 0 && !isNoteEdited) {\n            setNoteId(notes[selectedNoteIndex].id);\n            setNoteTitle(notes[selectedNoteIndex].title);\n            setNoteDescription(notes[selectedNoteIndex].description);\n            setCode(notes[selectedNoteIndex].code);\n            setLanguage(notes[selectedNoteIndex].language);\n        }\n    }, [notes, setNotes, selectedNoteIndex]);\n\n\n    const handleNoteTitleChange = (e) => {\n        setNoteTitle(e.target.value);\n        setIsNoteEdited(true);\n    };\n\n    const handleNoteDescriptionChange = (value, delta, source) => {\n        setNoteDescription(value);\n        if (source === 'user') {\n            setIsNoteEdited(true);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        setIsNoteEdited(true);\n    };\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value);\n        setIsNoteEdited(true);\n\n    };\n\n    const handleThemeChange = (e) => {\n        setTheme(e.target.value);\n    };\n\n    const initializeAddNewNote = () => {\n        setIsAddingNote(true);\n        setIsNoteEdited(false);\n        setNoteId(null);\n        setNoteTitle('');\n        setNoteDescription('');\n        setCode('');\n        setLanguage('javascript');\n        titleInputEl.current.focus();\n    };\n\n    const notifySave = () => {\n        toast.dark(\"Note successfully saved!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDelete = () => {\n        toast.dark(\"Note successfully deleted!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifySaveError = () => {\n        toast.error(\"There was an issue saving your note, please try again!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    };\n\n    const notifyDeleteError = () => {\n        toast.error(\"There was an issue deleting your note, please try again!\", {\n            position: \"bottom-right\",\n            autoClose: 2500,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n        });\n    }\n\n    const handleDeleteNote = async (noteId) => {\n        setIsAddingNote(false);\n        const res = await deleteNote(noteId, currentUser.id);\n        if (res) {\n            notifyDelete();\n            setNotes(notes.filter(note => note.id !== noteId));\n        } else {\n            notifyDeleteError();\n        }\n    };\n\n    const handleSaveNote = async () => {\n        if (isAddingNote) {\n            setSelectedNoteIndex(0);\n            let title = '';\n            if (noteTitle === '') {\n                title = 'Untitled'\n            } else {\n                title = noteTitle;\n            }\n\n            const res = await addNote(title, noteDescription, code, language, currentUser.id)\n            if (res) {\n                notifySave();\n                setNotes([{\n                    id: res[0].id,\n                    title: res[0].title,\n                    description: res[0].description,\n                    code: res[0].code,\n                    language: res[0].language,\n                    user_id: res[0].user_id\n                }, ...notes]);\n            } else {\n                notifySaveError();\n            }\n            setIsAddingNote(false);\n            setIsNoteEdited(false);\n        } else {\n            const res = await updateNote(noteId, noteTitle, noteDescription, code, language)\n            if (res) {\n                notifySave();\n                const newNotes = [...notes];\n                newNotes[selectedNoteIndex] = {\n                    id: res[0].id,\n                    title: res[0].title,\n                    description: res[0].description,\n                    code: res[0].code,\n                    language: res[0].language,\n                    user_id: res[0].user_id\n                };\n                setNotes(newNotes);\n            } else {\n                notifySaveError();\n            };\n            setIsNoteEdited(false);\n        };\n    };\n\n    const handleNoteClick = (e) => {\n        titleInputEl.current.focus();\n        setIsAddingNote(false);\n        setSelectedNoteIndex(notes.findIndex(note => note.id === parseInt(e.target.dataset.id)));\n    };\n\n    useEffect(() => {\n        const timeOut = setTimeout(() => {\n            if (isNoteEdited) {\n                handleSaveNote()\n            }\n            setIsNoteEdited(false);\n        }, 3000);\n        return () => {\n            clearTimeout(timeOut);\n        }\n    }, [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language]);\n\n\n    return (\n        <div>\n            <div className={classes.Container}>\n                <NotesList\n                    notes={notes}\n                    noteClicked={handleNoteClick}\n                    addNoteClicked={initializeAddNewNote}\n                    noteId={noteId} />\n                <NoteEditor\n                    inputRef={titleInputEl}\n                    noteTitle={noteTitle}\n                    noteDescription={noteDescription}\n                    noteTitleChanged={handleNoteTitleChange}\n                    noteDescriptionChanged={handleNoteDescriptionChange}\n                    deleteClicked={() => handleDeleteNote(noteId)}\n                    saveClicked={() => handleSaveNote()} />\n                <CodeEditor\n                    value={code}\n                    codeChanged={handleCodeChange}\n                    LanguageChanged={handleLanguageChange}\n                    language={language}\n                    ThemeChanged={handleThemeChange}\n                    theme={theme} />\n                <ToastContainer />\n            </div>\n        </div>\n    )\n}\n","/Users/rosegaban/dev/devkeep/src/components/Auth/Signup.js",[],"/Users/rosegaban/dev/devkeep/src/components/Profile/Profile.js",[],"/Users/rosegaban/dev/devkeep/src/components/NoteEditor/NoteEditor.js",[],"/Users/rosegaban/dev/devkeep/src/components/NotesList/NotesList.js",[],"/Users/rosegaban/dev/devkeep/src/components/CodeEditor/CodeEditor.js",[],"/Users/rosegaban/dev/devkeep/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/rosegaban/dev/devkeep/src/components/Navigation/Navigation.js",[],"/Users/rosegaban/dev/devkeep/src/components/NotesList/NoteListItem/NoteListItem.js",[],"/Users/rosegaban/dev/devkeep/src/components/UI/AddButton/AddButton.js",[],"/Users/rosegaban/dev/devkeep/src/components/Logo/Logo.js",[],"/Users/rosegaban/dev/devkeep/src/components/UI/DeleteButton/DeleteButton.js",[],"/Users/rosegaban/dev/devkeep/src/components/UI/SaveButton/SaveButton.js",[],"/Users/rosegaban/dev/devkeep/src/components/UI/LanguageIcn/LanguageIcn.js",[],"/Users/rosegaban/dev/devkeep/src/components/UI/PaletteIcn/PaletteIcn.js",[],"/Users/rosegaban/dev/devkeep/src/components/Navigation/NavigationItem/NavigationItem.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":46,"column":8,"nodeType":"113","endLine":46,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":57,"column":8,"nodeType":"113","endLine":57,"endColumn":44,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":220,"column":8,"nodeType":"113","endLine":220,"endColumn":80,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'ChromeReaderMode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'selectedNoteIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNoteId' needs the current value of 'selectedNoteIndex'.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'isNoteEdited'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'handleSaveNote'. Either include it or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [currentUser, selectedNoteIndex]",{"range":"130","text":"131"},"Update the dependencies array to be: [notes, setNotes, selectedNoteIndex, isNoteEdited]",{"range":"132","text":"133"},"Update the dependencies array to be: [isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]",{"range":"134","text":"135"},[2086,2088],"[currentUser, selectedNoteIndex]",[2519,2555],"[notes, setNotes, selectedNoteIndex, isNoteEdited]",[7241,7313],"[isAddingNote, isNoteEdited, noteTitle, noteDescription, code, language, handleSaveNote]"]